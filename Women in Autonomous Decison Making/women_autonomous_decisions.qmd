---
title: "Women Making Autonomous Decisons"
author: "Midega George"
format: pdf
execute: 
  echo: false
fig-width: 12
fig-height: 8
fig-asp: 1.5
---

## Data Cleaning, Manipulation, and Selection

```{r, message=FALSE}
library(tidyverse, quietly=TRUE)


raw_data <- read.csv("equality_business_law.csv", na="..")[, -c(2, 4)]
clean_1 <- raw_data %>%
  pivot_longer(cols=contains("..YR", ignore.case=FALSE), names_to="year", 
               values_to="values") %>%
  rename(region=Country.Name, variables=Series.Name)%>%
  pivot_wider(., names_from=variables, values_from=values) %>%
  mutate(year=str_sub(year, 2, 5), 
         across(year, as.numeric),
         region=recode(region, 
                       "Cabo Verde" = "Cape Verde", 
                       "Congo, Dem. Rep." = "Democratic Republic of the Congo", 
                       "Congo, Rep." = "Republic of Congo", 
                       "Cote d'Ivoire" = "Ivory Coast",
                       "Egypt, Arab Rep." = "Egypt", 
                       "Gambia, The" = "Gambia", 
                       "Eswatini" = "Swaziland"))

biz_law_1 <- clean_1[, 1:11]
equality_1 <- clean_1[, c(1:2, 12:25)]
```

## Exploring Women, Business and the Law

```{r}
recode.biz_law <- c("region", "year", "Assets", "Entrepreneurship", 
                    "Marriage", "Mobility", "Parenthood", "Pay", "Pension", 
                    "Workplace", "Overall")

colnames(biz_law_1) <- recode.biz_law
biz_law <- biz_law_1 %>%
  pivot_longer(cols=recode.biz_law[3:11], names_to="indicator", 
               values_to="score")
```

## Visualizing Women, Business, and the Law Indicators

```{r}
# Selecting only African Continents
continents <- read.csv("africa_clean_coords.csv")
africa_countries <- continents %>%
  filter(Continent == "Africa")

africa_map <- map_data("world", region=africa_countries$Country)

# Filter data to plot
indicators <- biz_law %>%
  filter(year==2021, indicator == "Assets")

# Data to plot
plot_indicators <- africa_map %>%
  left_join(indicators, by=c("region"))

# Labels to use
country_labels <- africa_countries %>%
  left_join(plot_indicators, by=c("Country"="region")) %>%
  distinct(Country, .keep_all=TRUE) %>%
  select(-c("long", "lat", "year", "indicator", "score", "Continent")) %>%
  rename(lat=latitude, long=longitude)

# Visualization

theme_map <- function(...){
  theme(
    axis.text=element_blank(),
    axis.ticks=element_blank(),
    axis.title=element_blank(),
    rect=element_blank(),
    axis.line = element_blank(),
    panel.border = element_blank(),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "#fffdfd"),
    plot.background = element_rect(fill="#fffdfd"),
    plot.title = element_text(hjust = 0.5),
    legend.position = "right",
    legend.title=element_text(size=10), 
    legend.text=element_text(size=10),
    ...)
}

ggplot(plot_indicators, aes(x=long, y=lat, group=group))+
  coord_equal()+
  geom_polygon(aes(fill=score), color="#ffefdb")+
  scale_fill_continuous(name=unique(indicators$indicator), 
                        type="gradient", high="red", low="orange", 
                        guide=guide_legend(
                          direction = "vertical",  title.position = 'top',
                          keyheight = unit(2, units = "mm"),
                          title.hjust=0.5, ncol = 1, reverse=F, 
                          label.position="right"))+
  labs(
    title=paste0("Women, Business and the Law: ", 
                    {unique(indicators$indicator)}, 
                    " Indicator Score, ", {unique(indicators$year)}),
    caption=paste0("Data Source: World Bank\n",
                   "Last Update 2023/01/31\n", 
                   "Author: Midega George")) +
  ggrepel::geom_label_repel(aes(label= country_code), data=country_labels, 
                            size=2.5, max.overlaps = 25, label.size=0, 
                            arrow=arrow(length=unit(0.006, 'cm'))) + 
  theme_map()
```

## Exploring Equality

```{r}
recode.equality <- c("region", "year",  "apply for passport",
                     "be head of household", "choose where to live",
                     "get a job", "obtain a judgment of divorce",
                     "open a bank account", "register a business",
                     "sign a contract", "travel outside her home",
                     "travel outside the country", "work at night",
                     "work in job deemed dangerous",
                     "work in an industrial job", "remarry")

colnames(equality_1) <- recode.equality
equality <- equality_1 %>%
  pivot_longer(cols=recode.equality[3:16], names_to="opinion", 
               values_to="response") %>%
  mutate(across(response, ~replace_na(., 3)), 
         across(c(response), factor))
```

## Visualizing Equality

```{r}

# Filter Data to Plot
all_response <- equality %>%
  filter(year==2021, opinion=="choose where to live")

# Data to Plot
plot_response <- africa_map %>%
  left_join(all_response, by=c("region"))

# Labels to use

country_labels <- africa_countries %>%
  left_join(plot_response, by=c("Country"="region")) %>%
  distinct(Country, .keep_all=TRUE) %>%
  select(-c("long", "lat", "Continent", "year", "opinion", "response")) %>%
  rename(lat=latitude, long=longitude)

# Map Plot

ggplot(plot_response, aes(x=long, y=lat, group=group))+
  coord_fixed(1)+
  geom_polygon(aes(fill=response), color="#ffefdb")+
  scale_fill_manual(values=c("#0b84a5", "#f17853", "#ffb600"), 
                    labels=(c("No", "Yes", "No Data")), 
                    name=unique(all_response$opinion)) +
  labs(title=paste0("A woman can ", {unique(all_response$opinion)}, 
                    " the same way as a man, ", {unique(all_response$year)}), 
       caption=paste0("Data Source: World Bank\n", "Last Update 2023/01/31\n", 
                      "Author: Midega George")) +
  ggrepel::geom_label_repel(aes(label= country_code), data= country_labels, 
                            size=2.5, max.overlaps = 25, label.size=0, 
                            arrow=arrow(length=unit(0.1, 'cm'))) +
  theme_map()

#ggsave("plots/live.png", bg="white", width=8)
```
